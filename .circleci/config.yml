version: 2.1

jobs:
  build_registry:
    machine:
      image: ubuntu-1604:201903-01

    steps:
      - checkout

      - run:
          name: Build agogos-registry image
          command: docker build -t agogos-registry --build-arg target=PRODUCTION ./services/registry

      - run:
          name: Save image to fs
          command: |
            mkdir -p agogos-registry-cache
            docker save -o agogos-registry-cache/agogos-registry.tar agogos-registry

      - save_cache:
          paths:
            - agogos-registry-cache
          key: agogos-registry-cache-key{{ .Revision }}

  build_graphql_gateway:
    machine:
      image: ubuntu-1604:201903-01

    steps:
      - checkout

      - run:
          name: Build agogos-graphql-gateway image
          command: docker build -t agogos-graphql-gateway --build-arg target=PRODUCTION ./services/graphql-server

      - run:
          name: Save image to fs
          command: |
            mkdir -p agogos-graphql-gateway-cache
            docker save -o agogos-graphql-gateway-cache/agogos-graphql-gateway.tar agogos-graphql-gateway

      - save_cache:
          paths:
            - agogos-graphql-gateway-cache
          key: agogos-graphql-gateway-cache-key{{ .Revision }}

  build_gql_controller:
    machine:
      image: ubuntu-1604:201903-01

    steps:
      - checkout

      - run:
          name: Build agogos-gql-controller image
          command: docker build -t agogos-gql-controller --build-arg target=PRODUCTION ./remote-sources/kubernetes

      - run:
          name: Save image to fs
          command: |
            mkdir -p agogos-gql-controller-cache
            docker save -o agogos-gql-controller-cache/agogos-gql-controller.tar agogos-gql-controller

      - save_cache:
          paths:
            - agogos-gql-controller-cache
          key: agogos-gql-controller-cache-key{{ .Revision }}

  build_e2e:
    machine:
      image: ubuntu-1604:201903-01

    steps:
      - checkout

      - run:
          name: Build e2e tests image
          command: docker build -t e2e ./e2e

      - run:
          name: Save image to fs
          command: |
            mkdir -p agogos-e2e-cache
            docker save -o agogos-e2e-cache/agogos-e2e.tar e2e

      - save_cache:
          paths:
            - agogos-e2e-cache
          key: agogos-e2e-cache-key{{ .Revision }}

  run_e2e_tests:
    machine:
      image: ubuntu-1604:201903-01

    steps:
      - checkout

      - restore_cache:
          keys:
            - agogos-registry-cache-key{{ .Revision }}

      - restore_cache:
          keys:
            - agogos-graphql-gateway-cache-key{{ .Revision }}

      - restore_cache:
          keys:
            - agogos-gql-controller-cache-key{{ .Revision }}

      - restore_cache:
          keys:
            - agogos-e2e-cache-key{{ .Revision }}

      - run:
          name: Load docker images from fs
          command: |
            docker load < agogos-registry-cache/agogos-registry.tar
            docker load < agogos-graphql-gateway-cache/agogos-graphql-gateway.tar
            docker load < agogos-gql-controller-cache/agogos-gql-controller.tar
            docker load < agogos-e2e-cache/agogos-e2e.tar

      - run:
          name: Run E2E tests
          working_directory: e2e
          command: scripts/run_tests.sh

workflows:
  version: 2

  build_all:
    jobs:
      - build_registry
      - build_graphql_gateway
      - build_gql_controller
      - build_e2e
      - run_e2e_tests:
          requires:
            - build_registry
            - build_graphql_gateway
            - build_gql_controller
            - build_e2e