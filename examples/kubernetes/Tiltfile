if k8s_context() == 'microk8s':
    print("using microk8s registry")
    default_registry('localhost:32000')

# agogos namespace
k8s_yaml('./deployments/infra/namespace.yaml')

# agogos crds
k8s_yaml(
    listdir('../../remote-sources/kubernetes/src/crd')
)

# mocks
k8s_yaml(
    listdir('./deployments/mocks'),
)

# agogos deployments, roles & secrets
k8s_yaml(
    listdir('./deployments/infra'),
)

# user namespace & services
k8s_yaml('./deployments/services/user-namespace.yaml')
k8s_yaml(listdir('./deployments/services/user'))
k8s_yaml(listdir('./deployments/services/user-subscription'))

docker_build('soluto/agogos-graphql-gateway', '../../services/graphql-server')
docker_build('soluto/agogos-registry', '../../services/registry')
docker_build('soluto/agogos-gql-controller', '../../remote-sources/kubernetes')

k8s_resource('gateway', port_forwards=['8011:8011'])
k8s_resource('registry', port_forwards=['8012:80', '8013:81'])
k8s_resource('gql-controller', port_forwards=['8014:80'])